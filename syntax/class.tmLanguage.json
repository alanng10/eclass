{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Class",
	"patterns": [
		{
			"include": "#Info"
		},
		{
			"include": "#StringValue"
		},
		{
			"include": "#IntValue"
		},
		{
			"include": "#ClassDefine"
		},
		{
			"include": "#WordClass"
		},
		{
			"include": "#Keyword"
		}
	],
	"repository": {
		"ClassDefine": {
			"begin": "(?<=^|[^A-Za-z0-9])(class)(?=$|[^A-Za-z0-9])",
			"beginCaptures": {
				"1": {
					"name": "keyword.class"
				}
			},
			"end": "(?=\\{)",
			"patterns": [
				{
					"include": "#Info"
				},
				{
					"include": "#StringValue"
				},
				{
					"include": "#IntValue"
				},
				{
					"include": "#Keyword"
				},
				{
					"include": "#ClassName"
				}
			]
		},
		"WordClass" : {
			"begin": "(?<=^|[^A-Za-z0-9])(new|share|cast|var|prudate|probate|precate|private)(?=$|[^A-Za-z0-9])",
			"beginCaptures": {
				"1": {
					"name": "keyword.class"
				}
			},
			"end": "(([A-Za-z0-9]+)|(\"((\\\\[^\\n])|([^\"\\n]))*([\"]?))|([^# \\n]))",
			"endCaptures": {
				"1": {
					"patterns": [
						{
							"include": "#StringValue"
						},
						{
							"include": "#IntValue"
						},
						{
							"include": "#Keyword"
						},
						{
							"include": "#ClassName"
						}
					]
				}
			},
			"patterns": [
				{
					"include": "#Info"
				}
			]
		},
		"ClassName": {
			"patterns": [{
				"name": "entity.name.type.class",
				"match": "(?<=^|[^A-Za-z0-9])(?!((?<=^|[^A-Za-z0-9])(class|field|maide|var|get|set|this|base|return|inf|while|new|share|cast|null|true|false|sign|bit|prudate|probate|precate|private)(?=$|[^A-Za-z0-9])))([A-Za-z][A-Za-z0-9]*)(?=$|[^A-Za-z0-9])"
			}]
		},
		"Keyword": {
			"patterns": [{
				"name": "keyword.class",
				"match": "(?<=^|[^A-Za-z0-9])(class|field|maide|var|get|set|this|base|return|inf|while|new|share|cast|null|true|false|sign|bit|prudate|probate|precate|private)(?=$|[^A-Za-z0-9])"
			}]
		},
		"Info": {
			"patterns": [{
				"name": "comment.class",
				"match": "#(.*)"
			}]
		},
		"IntValue": {
			"patterns": [{
				"name": "constant.numeric.class",
				"match": "(?<=^|[^A-Za-z0-9])(([0-9]+)|(0s([np]([0-9]*))?)|(0h([a-f0-9]*))|(0h(s([np]([a-f0-9]*))?)?))(?=$|[^A-Za-z0-9])"
			}]
		},
		"StringValue": {
			"patterns": [{
				"name": "string.quoted.class",
				"match": "\"((\\\\[^\\n])|([^\"\\n]))*([\"]?)"
			}]
		}
	},
	"scopeName": "source.class"
}